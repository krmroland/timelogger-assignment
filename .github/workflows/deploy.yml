on: push
name: app-ci
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
      - uses: actions/checkout@v3
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: |
          composer self-update
          composer install --prefer-dist --no-interaction
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit
  deploy:
    runs-on: ubuntu-latest
    needs: tests
    if: success() && (github.ref == 'refs/heads/mainline' || contains(github.event.head_commit.message, '--deploy'))
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Node version
        uses: actions/setup-node@v3
        with:
          node-version: "19"

      - name: Install prod Dependencies
        run: |
          composer install --no-dev  --prefer-dist --no-interaction

      - name: build ui
        run: |
          npm ci
          npm run build

      - name: clean up
        run: |
          rm -rdf node_modules tests ui

      - name: copy file via ssh
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DIGITAL_OCEAN_HOST }}
          username: root
          key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          source: "."
          target: /timelogger

      - name: Finalize deployment
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DIGITAL_OCEAN_HOST }}
          username: root
          key: ${{ secrets.DIGITAL_OCEAN_SSH_KEY }}
          script_stop: true
          script: |
            php --version
            cd /timelogger
            cp infrastructure/default.nginx.conf /etc/nginx/sites-enabled/default.conf
            cp infrastructure/supervisord.conf  /etc/supervisor/conf.d/timelogger.conf
            cp infrastructure/php.ini /etc/php.ini
            cp .env.example .env

            if [ ! -f /timelogger/database/database.sqlite ]; then
              touch /timelogger/database/database.sqlite
            fi
            php artisan migrate --force
            supervisorctl reload
            nginx -s reload
